@page
@model Projet_AdoNet.Pages.Operations.TopDixClientsModel
@{
}
@{
    ViewData["Title"] = "Le top 10 des Clients";
}

<br />

<div class="text-center">
    <h1 class="display-4">@ViewData["Title"]</h1>
</div>

<br />

<div class="row">
    <div class="col-sm">
        <table class="table table-striped table caption-top" id="myTable">
            <thead>
                <tr>
                    <th scope="col">Id du client</th>
                    <th scope="col">Nom</th>
                    <th scope="col">Prenom</th>
                    <th scope="col">Nombre de projet</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ClientP)
                {
                    <tr>
                        <th scope="row">@Html.DisplayFor(Model => item.Id)</th>
                        <th scope="row">@Html.DisplayFor(Model => item.Nom)</th>
                        <td>@Html.DisplayFor(Model => item.Prenom)</td>
                        <td>@Html.DisplayFor(Model => item.NombreProjet)</td>
                        <td><a asp-page="./ListeProjetParCommercial" asp-route-id="@item.Id">Afficher projet</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-sm">
        <canvas id="myChart" width="200" height="200"></canvas>
    </div>
</div>

<table id="nomPrenom" style="visibility:collapse;">
    @foreach (var item in Model.ClientP)
    {
        <tr>
            <td>@Html.DisplayFor(Model => item.Nom) @Html.DisplayFor(Model => item.Prenom)</td>
        </tr>
    }
    </table>
<table id="nombreProjet"  style="visibility:collapse;">
    @foreach (var item in Model.ClientP)
    {
        <tr>
            <td>@Html.DisplayFor(Model => item.NombreProjet)</td>
        </tr>
    }
    </table>
<!--injection du script-->
<script src="~/js/Chart.bundle.min.js"></script>

<!--script pour le chart-->
<script>
    var labelss=[];
    var valuess = [];

    function getInformations() {
        var table = document.getElementById('nomPrenom');
        for (var r = 0, n = table.rows.length; r < n; r++) {
            for (var c = 0, m = table.rows[r].cells.length; c < m; c++) {

                labelss.push(table.rows[r].cells[c].innerHTML);
                
            }
        }

        var table = document.getElementById('nombreProjet');
        for (var r = 0, n = table.rows.length; r < n; r++) {
            for (var c = 0, m = table.rows[r].cells.length; c < m; c++) {

                valuess.push(table.rows[r].cells[c].innerHTML);

            }
        }
    }
    getInformations();

    //var labelss = ['Red', 'Blue', 'Yellow', 'Green'];

    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'polarArea',
        data: {
            labels: labelss,
            datasets: [{
                label: '# de projet',
                data: valuess,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>
